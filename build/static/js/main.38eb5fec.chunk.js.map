{"version":3,"sources":["redux/actionCreators.js","firebase.js","redux/sagas/auth.js","redux/sagas/comments.js","redux/sagas/series.js","redux/sagas/index.js","redux/reducers/auth.js","redux/reducers/comments.js","redux/reducers/series.js","redux/reducers/index.js","redux/index.js","screens/elements/nav/BodyNav.js","screens/elements/nav/index.js","screens/Home.js","screens/About.js","elements/Button.js","screens/elements/FormSeries.js","screens/NewSeries.js","screens/Series.js","screens/EditSeries.js","screens/comments/Comment.js","screens/comments/NewComment.js","screens/comments/index.js","screens/elements/formAccount/Name.js","screens/elements/formAccount/Email.js","screens/elements/formAccount/Password.js","screens/elements/formAccount/PasswordConfirm.js","screens/elements/formAccount/index.js","screens/Login.js","screens/CreateAccount.js","screens/Setting.js","screens/elements/Root.js","screens/elements/Footer.js","screens/index.js","App.js","registerServiceWorker.js","index.js"],"names":["createActions","signinRequest","signinSuccess","signinFailure","sendEmailRequest","sendEmailSuccess","sendEmailFailure","authRequest","authSuccess","authFailure","resetAuth","destroyAuthRequest","destroyAuthSuccess","destroyAuthFailure","createProfileRequest","createProfileSuccess","createProfileFailure","updateEmailRequest","updateEmailSuccess","updateEmailFailure","updatePasswordRequest","updatePasswordSuccess","updatePasswordFailure","removeProfileRequest","removeProfileSuccess","removeProfileFailure","getCommentsRequest","getCommentsSuccess","getCommentsFailure","createCommentRequest","createCommentSuccess","createCommentFailure","removeCommentRequest","removeCommentSuccess","removeCommentFailure","destroyComments","getSeriesRequest","getSeriesSuccess","getSeriesFailure","createSerieRequest","createSerieSuccess","createSerieFailure","getSerieRequest","getSerieSuccess","getSerieFailure","updateSerieRequest","updateSerieSuccess","updateSerieFailure","removeSerieRequest","removeSerieSuccess","removeSerieFailure","destroySeries","resetSeries","Types","Creators","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","auth","login","sendEmail","isAuth","createProfile","newEmail","newPassword","removeProfile","destroyAuth","action","signInWithEmailAndPassword","_action$user","email","password","user","regenerator_default","a","wrap","_context","prev","next","call","sent","put","ActionCreator","t0","message","stop","_marked","this","sendPasswordResetEmail","_context2","_marked2","wrapper","authFunction","_context3","currentUser","_marked3","createUserWithEmailAndPassword","_action$user2","passwd","uid","pathUser","newCadaster","ref","result","_database$ref","update","_context4","concat","name","series","Action","Comedy","Drama","_marked4","updateEmail","_context5","_marked5","updatePassword","_context6","_marked6","url","_database$ref2","remove","deleteFunction","_context7","delete","_marked7","signOut","_context8","_marked8","getComments","createComment","removeComment","data","ra","datas","comments","Promise","resolve","axios","post","once","snapshot","val","comments_marked","id","newcomment","comment","child","push","key","idUser","date","comments_marked2","comments_marked3","getSeries","createSerie","getSerie","updateSerie","removeSerie","genre","series_marked","serie","newSerie","Object","objectSpread","status","notes","series_marked2","series_marked3","defineProperty","series_marked4","newAction","series_marked5","rootSaga","window","location","href","split","length","onAuthStateChanged","all","takeLatest","AUTH_REQUEST","SIGNIN_REQUEST","SEND_EMAIL_REQUEST","CREATE_PROFILE_REQUEST","UPDATE_EMAIL_REQUEST","UPDATE_PASSWORD_REQUEST","REMOVE_PROFILE_REQUEST","DESTROY_AUTH_REQUEST","GET_COMMENTS_REQUEST","CREATE_COMMENT_REQUEST","REMOVE_COMMENT_REQUEST","GET_SERIES_REQUEST","CREATE_SERIE_REQUEST","GET_SERIE_REQUEST","UPDATE_SERIE_REQUEST","REMOVE_SERIE_REQUEST","sagas_marked","INITIAL_STATE","isLoadding","isSigningin","emailChanged","passwordChanged","emailSended","error","errorMessage","HANDLERS","_HANDLERS","state","arguments","undefined","AUTH_SUCCESS","AUTH_FAILURE","SEND_EMAIL_SUCCESS","SEND_EMAIL_FAILURE","DESTROY_AUTH_SUCCESS","DESTROY_AUTH_FAILURE","RESET_AUTH","SIGNIN_SUCCESS","SIGNIN_FAILURE","CREATE_PROFILE_SUCCESS","CREATE_PROFILE_FAILURE","UPDATE_EMAIL_SUCCESS","UPDATE_EMAIL_FAILURE","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILURE","REMOVE_PROFILE_SUCCESS","REMOVE_PROFILE_FAILURE","createReducer","saved","comments_HANDLERS","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILURE","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_FAILURE","REMOVE_COMMENT_SUCCESS","newComments","keys","map","value","REMOVE_COMMENT_FAILURE","DESTROY_COMMENTS","series_HANDLERS","GET_SERIES_SUCCESS","GET_SERIES_FAILURE","CREATE_SERIE_SUCCESS","CREATE_SERIE_FAILURE","GET_SERIE_SUCCESS","GET_SERIE_FAILURE","UPDATE_SERIE_SUCCESS","UPDATE_SERIE_FAILURE","REMOVE_SERIE_SUCCESS","newSeries","REMOVE_SERIE_FAILURE","DESTROY_SERIES","RESET_SERIES","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","createStore","reducers","applyMiddleware","run","sagas","BodyNav","styled","div","_templateObject","props","displayUl","display","ScreensElementsNav","finalPath","selected","event","target","type","component","_this","setState","voltarTopo","scrollTo","logout","valuesPath","react_default","createElement","react","nav_BodyNav","className","onClick","src","height","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","to","aria-haspopup","aria-labelledby","Component","connect","dispatch","BodyHome","Home_templateObject","ScreensHome","reset","data-ride","data-slide-to","class","role","data-slide","aria-hidden","BodyAbout","About_templateObject","ScreensAbout","Button","button","Button_templateObject","width","background","color","statsgenre","0","1","2","statsuser","FormSeries","style","maxWidth","elements_Button","onChange","handleChange","saveSeries","BodyNewSerie","NewSeries_templateObject","ScreensNewSeries","redirect","field","Redirect","elements_FormSeries","BodySeries","Series_templateObject","Assistido","Assistindo","Assistir","ScreensSeries","componentDidMount","load","match","params","renderSeries","toUpperCase","deleteSeries","prevProps","_this2","position","isLoading","BodyEdit","EditSeries_templateObject","ScreensEditSeries","received","_this$state","save","Comment","renderComments","NewComment","sendComment","Date","getDate","getMonth","getFullYear","placeholder","ScreensComments","comments_NewComment","comments_Comment","top","BodyName","Name_templateObject","Name","autoComplete","BodyEmail","Email_templateObject","Email","data-placement","title","BodyPassword","Password_templateObject","Password","BodyPasswordConfirm","PasswordConfirm_templateObject","PasswordConfirm","passwordConfirm","FormAccount","createAccount","formAccount_Name","formAccount_Email","formAccount_Password","formAccount_PasswordConfirm","BodyLogin","Login_templateObject","ScreensLogin","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","formAccount","tabindex","data-dismiss","BodyRegister","CreateAccount_templateObject","ScreensCreateAccount","form","document","getElementById","onpaste","BodySetting","Setting_templateObject","ScreensSetting","receivedEmail","BodyMain","Root_templateObject","ScreensElementsRoot","Switch","Route","exact","path","ScreensRegister","BodyFooter","Footer_templateObject","ScreensElementsFooter","Screens","verify","funcVerify","nav","Root","Footer","App","es","store","BrowserRouter","screens","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.38eb5fec.chunk.js","sourcesContent":["import { createActions } from 'reduxsauce' \r\n\r\nexport const {\r\n    Types,\r\n    Creators\r\n} = createActions({ \r\n    \r\n    signinRequest: ['user'],\r\n    signinSuccess: ['user'],\r\n    signinFailure: ['error'],\r\n\r\n    sendEmailRequest: ['email'],\r\n    sendEmailSuccess: null,\r\n    sendEmailFailure: ['error'],\r\n\r\n    authRequest: null,\r\n    authSuccess: ['user'],\r\n    authFailure: ['error'],\r\n\r\n    resetAuth: null,\r\n\r\n    destroyAuthRequest: null,\r\n    destroyAuthSuccess: null,\r\n    destroyAuthFailure: ['error'],\r\n    \r\n\r\n    createProfileRequest: ['user'],\r\n    createProfileSuccess: ['user'],\r\n    createProfileFailure: ['error'],\r\n\r\n    updateEmailRequest: ['email'],\r\n    updateEmailSuccess: ['email'],\r\n    updateEmailFailure: ['error'],\r\n\r\n    updatePasswordRequest: ['password'],\r\n    updatePasswordSuccess: null,\r\n    updatePasswordFailure: ['error'],\r\n\r\n    removeProfileRequest: ['user'],\r\n    removeProfileSuccess: null,\r\n    removeProfileFailure: ['error'],\r\n\r\n\r\n\r\n    getCommentsRequest: null,\r\n    getCommentsSuccess: ['comments'],\r\n    getCommentsFailure: ['error'],\r\n\r\n    createCommentRequest: ['comment'],\r\n    createCommentSuccess: ['comment'],\r\n    createCommentFailure: ['error'],\r\n\r\n    removeCommentRequest: ['comment'],\r\n    removeCommentSuccess: ['comment'],\r\n    removeCommentFailure: ['error'],\r\n\r\n    destroyComments: null,\r\n\r\n\r\n    getSeriesRequest: ['genre', 'uid'],\r\n    getSeriesSuccess: ['series'],\r\n    getSeriesFailure: ['error'],\r\n\r\n\r\n    createSerieRequest: ['serie', 'uid'],\r\n    createSerieSuccess: ['serie'],\r\n    createSerieFailure: ['error'],\r\n\r\n   \r\n    getSerieRequest: ['serie', 'uid'],\r\n    getSerieSuccess: ['serie'],\r\n    getSerieFailure: ['error'],\r\n    updateSerieRequest: ['serie','uid'],\r\n    updateSerieSuccess: ['serie'],\r\n    updateSerieFailure: ['error'],\r\n\r\n    removeSerieRequest: ['serie','uid'],\r\n    removeSerieSuccess: ['serie'],\r\n    removeSerieFailure: ['error'],\r\n\r\n    destroySeries: null,\r\n\r\n    resetSeries: null\r\n})\r\n\r\n\r\nexport default Creators","import  firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/auth'\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDnWS34xUd8Rpj-07-u91cB0Lf3QMarHW0\",\r\n    authDomain: \"netflix-series.firebaseapp.com\",\r\n    databaseURL: \"https://netflix-series.firebaseio.com\",\r\n    projectId: \"netflix-series\",\r\n    storageBucket: \"netflix-series.appspot.com\",\r\n    messagingSenderId: \"204532067959\"\r\n}\r\nfirebase.initializeApp(config)\r\n\r\nexport const database = firebase.database()  \r\nexport const auth = firebase.auth()\r\n","import { put, call } from 'redux-saga/effects'\r\nimport ActionCreator from '../actionCreators'\r\n\r\nexport function* login(auth, action){\r\n    try{\r\n        const {signInWithEmailAndPassword} = auth\r\n        const {email, password} = action.user\r\n        const user = yield call([auth, signInWithEmailAndPassword], email, password)\r\n        //const user = yield auth.signInWithEmailAndPassword(email, passwd)\r\n        yield put(ActionCreator.signinSuccess(user.user))\r\n    }catch({message}){\r\n        yield put(ActionCreator.signinFailure(\"Dind't have possible do login\"))\r\n    }        \r\n}\r\n\r\nexport function* sendEmail(auth, action){\r\n    try{\r\n        const {sendPasswordResetEmail} = auth\r\n        yield call([auth, sendPasswordResetEmail], action.email)\r\n        yield put(ActionCreator.sendEmailSuccess())\r\n    }catch({message}){\r\n        yield put(ActionCreator.sendEmailFailure(message))\r\n    }        \r\n}\r\n\r\n\r\nexport function* isAuth(auth) {\r\n    try{\r\n        /*\r\n        const user = yield new Promise(resolve => {\r\n            auth.onAuthStateChanged(user => {\r\n                resolve(user)\r\n            })\r\n        })             the top option works too*/\r\n        const wrapper = {\r\n            authFunction : () => auth.currentUser\r\n        }\r\n        const {authFunction} = wrapper\r\n        const user = yield call([wrapper, authFunction])\r\n        if (user !== null){\r\n            yield put(ActionCreator.authSuccess(user))\r\n        } \r\n    }catch({message}){\r\n        yield put(ActionCreator.authFailure(message))\r\n    } \r\n}\r\n\r\n\r\nexport function* createProfile(auth, database, action){\r\n    try{\r\n        const {createUserWithEmailAndPassword} = auth\r\n        const {email, passwd} = action.user\r\n        const user = yield call([auth, createUserWithEmailAndPassword], email, passwd)\r\n        \r\n        const {uid} = user.user \r\n        const pathUser = `users/${uid}`\r\n        const newCadaster = {\r\n            name :action.user.name,\r\n            series: {Action:[''],Comedy:[''],Drama:['']}\r\n        }\r\n        const {ref} = database\r\n        const result = yield call([database,ref], pathUser) \r\n        const {update} = database.ref()\r\n        yield call([result, update], newCadaster)\r\n        //yield database.ref(pathUser).update(newCadaster) \r\n        \r\n        yield put(ActionCreator.createProfileSuccess(user.user))\r\n        \r\n        yield login(auth, action) //or the option below, but this mothod is already tested\r\n        //yield auth.signInWithEmailAndPassword(action.user.email, action.user.passwd)\r\n    }catch({message}){\r\n         yield put(ActionCreator.createProfileFailure(message))      \r\n    }     \r\n}\r\n\r\nexport function* newEmail(auth, action){\r\n    try{\r\n        const {updateEmail} = auth.currentUser\r\n        yield call([auth.currentUser, updateEmail], action.email)\r\n        yield put(ActionCreator.updateEmailSuccess(action.email))\r\n    }catch({message}){\r\n        yield put(ActionCreator.updateEmailFailure(message))\r\n    }\r\n}\r\n\r\nexport function* newPassword(auth, action){\r\n    try{\r\n        const {updatePassword} = auth.currentUser\r\n        yield call([auth.currentUser, updatePassword], action.password)\r\n        yield put(ActionCreator.updatePasswordSuccess())\r\n    }catch({message}){\r\n         yield put(ActionCreator.updatePasswordFailure(message)) \r\n    }\r\n}\r\n  \r\nexport function* removeProfile(auth, database, action){\r\n    try{  \r\n        const url = `/users/${action.user.uid}` \r\n\r\n        const {ref} = database\r\n        const result = yield call([database, ref], url)\r\n        const {remove} = database.ref() \r\n        yield call([result, remove])      \r\n\r\n        const deleteFunction = () => action.user.delete()\r\n        yield call([action.user, deleteFunction])\r\n\r\n        //yield action.user.delete() && database.ref(url).remove()\r\n        yield put(ActionCreator.removeProfileSuccess()) \r\n        yield destroyAuth(auth)  \r\n    }catch({message}){\r\n         yield put(ActionCreator.removeProfileFailure(message))      \r\n    }     \r\n}\r\n\r\nexport function* destroyAuth(auth){\r\n    try{\r\n        const {signOut} = auth\r\n        yield call([auth, signOut])\r\n        yield put(ActionCreator.destroyAuthSuccess())\r\n    }catch({message}){\r\n        yield put(ActionCreator.destroyAuthFailure(message))\r\n    }  \r\n} \r\n\r\n\r\n\r\n","import { put } from 'redux-saga/effects'\r\nimport ActionCreator from '../actionCreators'\r\nimport axios from 'axios'\r\n\r\nexport function* getComments(auth, database){\r\n    const data = {}\r\n    try{ \r\n        const user = yield auth.currentUser\r\n        const {ra} = user\r\n        const datas = yield new Promise(resolve => {\r\n            resolve(axios.post('/auth?token='+ra)) \r\n        })\r\n        if (datas.data === user.uid){\r\n            const comments =  database.ref('comments')\r\n            yield comments.once('value', snapshot => {\r\n                data.comments = snapshot.val()\r\n            })\r\n            yield put(ActionCreator.getCommentsSuccess(data.comments))\r\n        }else{\r\n            yield put(ActionCreator.getCommentsFailure(datas.data))\r\n        }   \r\n    }catch({message}){\r\n        yield put(ActionCreator.getCommentsFailure(message))\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport function* createComment(auth, database, action){  \r\n    try{   \r\n        const user = yield auth.currentUser\r\n        const {ra} = user\r\n        const data = yield new Promise(resolve => {\r\n            resolve(axios.post('/auth?token='+ra)) \r\n        })\r\n        if (data.data === user.uid){\r\n            const id = yield database.ref().child(\"comments\").push().key\r\n            const newcomment = {}\r\n            const comment = action.comment.newcomment\r\n            newcomment['comments/'+id] = {\r\n                id,\r\n                idUser: user.uid,\r\n                comment,\r\n                email : user.email,\r\n                date: action.comment.date\r\n            }\r\n            yield database.ref().update(newcomment)\r\n            yield put(ActionCreator.createCommentSuccess(newcomment))\r\n        }else{\r\n            yield put(ActionCreator.createCommentFailure(data.data))\r\n        }\r\n    }catch({message}){\r\n        yield put(ActionCreator.createCommentFailure(message))\r\n    } \r\n}\r\n\r\nexport function* removeComment(auth, database, action){ \r\n    try{\r\n        const user = auth.currentUser\r\n        const {ra} = user\r\n        const data = yield new Promise(resolve => {\r\n            resolve(axios.post('/auth?token='+ra))\r\n        })\r\n        if (data.data === user.uid){\r\n            const {comment} = action\r\n            const url = `comments/${comment}`\r\n            yield database.ref(url).remove()   \r\n            yield put(ActionCreator.removeCommentSuccess(comment))\r\n        }else{\r\n            yield put(ActionCreator.removeCommentFailure(data.data))\r\n        }\r\n    }catch({message}){\r\n        yield put(ActionCreator.removeCommentFailure(message))\r\n    } \r\n}\r\n\r\n","import { put } from 'redux-saga/effects'\r\nimport ActionCreator from '../actionCreators'\r\n\r\nexport function* getSeries(database, action){\r\n    const data = {}\r\n    try{ \r\n        const series = database.ref(`users/${action.uid}/series/${action.genre}`)\r\n        yield series.once('value', snapshot => {\r\n            data.series = snapshot.val()\r\n        })\r\n        yield put(ActionCreator.getSeriesSuccess(data.series))\r\n    }catch({message}){\r\n        yield put(ActionCreator.getSeriesFailure(message))\r\n    }\r\n}\r\n\r\nexport function* createSerie(database, action){\r\n    const serie = {\r\n        ...action.serie\r\n    }\r\n    try{\r\n        const id = yield database.ref().child(`users/${action.uid}/series/${serie.genre}`).push().key\r\n        const newSerie = {}\r\n        newSerie[`users/${action.uid}/series/${serie.genre}/`+id] = { \r\n            id,\r\n            name : serie.name,\r\n            status : serie.status,\r\n            genre : serie.genre,\r\n            notes : serie.notes\r\n        }\r\n        yield database.ref().update(newSerie)\r\n        yield put(ActionCreator.createSerieSuccess(newSerie))\r\n    }catch({message}){\r\n        yield put(ActionCreator.createSerieFailure('Não foi possivel adicionar a série'))\r\n    }\r\n    \r\n}\r\n\r\nexport function* getSerie(database, action){   \r\n    try{\r\n        const data = {}\r\n        const serie = database.ref(`users/${action.uid}/series/${action.serie.genre}/${action.serie.id}`)\r\n        yield serie.once('value', snapshot => {\r\n            data.serie = snapshot.val()\r\n        })\r\n        yield put(ActionCreator.getSerieSuccess(data.serie))\r\n    }catch({message}){\r\n        yield put(ActionCreator.getSerieFailure('Não foi possivel carregar as séries'))\r\n    }   \r\n}\r\nexport function* updateSerie(database, action){   \r\n    try{  \r\n        const url = `users/${action.uid}/series/${action.serie.genre}/${action.serie.id}`\r\n        yield database.ref(url).update(action.serie) \r\n        const newSerie = {[action.serie.id] : {...action.serie}}\r\n        yield put(ActionCreator.updateSerieSuccess(newSerie))\r\n    }catch({message}){\r\n        yield put(ActionCreator.updateSerieFailure('Não foi possivel atualizar a séries'))\r\n    }\r\n    \r\n}\r\n\r\nexport function* removeSerie(database, action){\r\n    const serie = {...action.serie}\r\n    try{\r\n        const url = `users/${action.uid}/series/${serie.genre}/${serie.id}`\r\n        yield database.ref(url).remove()\r\n        yield put(ActionCreator.removeSerieSuccess(serie.id))\r\n        const newAction = {\r\n            genre: serie.genre,\r\n            uid: action.uid\r\n        }\r\n        yield getSeries(database, newAction)\r\n    }catch({message}){\r\n        yield put(ActionCreator.removeSerieFailure('Não foi possivel remover a série'))\r\n    }  \r\n}\r\n","import { takeLatest, all, put} from 'redux-saga/effects'\r\nimport ActionCreator, { Types } from '../actionCreators'\r\n\r\nimport {auth, database} from '../../firebase'\r\n\r\nimport {login, sendEmail, isAuth, createProfile, newEmail, newPassword, removeProfile, destroyAuth } from './auth'\r\nimport {getComments, createComment, removeComment} from './comments'\r\nimport {getSeries, createSerie, getSerie, updateSerie, removeSerie} from './series'\r\n\r\nlet genre = window.location.href.split('/')\r\n\r\n//used when we refresh the page for editSeries\r\nlet serie = null\r\nif (genre[genre.length-2] === 'Action' || genre[genre.length-2] === 'Drama' || genre[genre.length-2] === 'Comedy'){\r\n    const id = genre[window.location.href.split('/').length-1]\r\n    genre = genre[genre.length-2]\r\n    serie = {genre, id}\r\n}\r\n\r\ngenre = genre[window.location.href.split('/').length-1]\r\n\r\n\r\nexport default function* rootSaga(){\r\n    const user = yield new Promise(resolve => {\r\n        auth.onAuthStateChanged(user => {\r\n            resolve(user)\r\n        })\r\n    })\r\n    yield all([\r\n        takeLatest(Types.AUTH_REQUEST, isAuth, auth),\r\n        takeLatest(Types.SIGNIN_REQUEST, login, auth),\r\n        takeLatest(Types.SEND_EMAIL_REQUEST, sendEmail, auth),\r\n        takeLatest(Types.CREATE_PROFILE_REQUEST, createProfile, auth, database),\r\n        takeLatest(Types.UPDATE_EMAIL_REQUEST, newEmail, auth),\r\n        takeLatest(Types.UPDATE_PASSWORD_REQUEST, newPassword, auth),\r\n        takeLatest(Types.REMOVE_PROFILE_REQUEST, removeProfile, auth, database),\r\n        takeLatest(Types.DESTROY_AUTH_REQUEST, destroyAuth, auth),\r\n        \r\n        takeLatest(Types.GET_COMMENTS_REQUEST, getComments, auth, database),\r\n        takeLatest(Types.CREATE_COMMENT_REQUEST, createComment, auth, database),\r\n        takeLatest(Types.REMOVE_COMMENT_REQUEST, removeComment, auth, database),\r\n\r\n        takeLatest(Types.GET_SERIES_REQUEST, getSeries, database),\r\n        takeLatest(Types.CREATE_SERIE_REQUEST, createSerie, database),\r\n        takeLatest(Types.GET_SERIE_REQUEST, getSerie, database),\r\n        takeLatest(Types.UPDATE_SERIE_REQUEST, updateSerie, database),\r\n        takeLatest(Types.REMOVE_SERIE_REQUEST, removeSerie, database),\r\n        \r\n        put(ActionCreator.authRequest()),\r\n        put(ActionCreator.getCommentsRequest()),\r\n        (genre === 'Action' || genre === 'Comedy' || genre === 'Drama') && put(ActionCreator.getSeriesRequest(genre, user.uid)),\r\n        serie && put(ActionCreator.getSerieRequest(serie, user.uid))\r\n        \r\n    ])\r\n}","import { createReducer } from 'reduxsauce'\r\nimport { Types } from '../actionCreators'\r\n\r\nexport const INITIAL_STATE = {\r\n    isAuth: false,\r\n    isLoadding: false,\r\n    isSigningin: false,\r\n    user: {},\r\n    emailChanged: false,\r\n    passwordChanged: false,\r\n    emailSended: false,\r\n    error: false,\r\n    errorMessage: ''\r\n}\r\n\r\n\r\nexport const authRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        error: false,\r\n        errorMessage: ''\r\n    }\r\n}\r\nexport const authSuccess = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isAuth: true,\r\n        user: action.user\r\n    }\r\n}\r\nexport const authFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isAuth: false,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}  \r\n\r\n \r\nexport const destroyAuthRequest = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        error: false,\r\n        errorMessage: ''\r\n    }\r\n} \r\nexport const destroyAuthSuccess = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isAuth: false,\r\n        passwordChanged: false,\r\n        emailChanged: false,\r\n        user : {}\r\n    }\r\n}  \r\nexport const destroyAuthFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\n\r\nexport const signinRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isSigningin: true,\r\n        emailSended: false,\r\n        error: false,\r\n        errorMessage: ''\r\n    }\r\n}\r\nexport const signinSuccess = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isSigningin: false,\r\n        isAuth: true,\r\n        user: action.user,\r\n    }\r\n}\r\nexport const signinFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isSigningin: false,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\n\r\nexport const createProfileRequest  = (state = INITIAL_STATE, action) => {\r\n    return {    \r\n        ...state,\r\n        isLoadding: true,\r\n        error: false,\r\n        errorMessage: ''\r\n    }\r\n}\r\nexport const createProfileSuccess = (state = INITIAL_STATE, action) => { \r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        isAuth: true,\r\n        user: action.user,\r\n    }\r\n}\r\nexport const createProfileFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        error: true,\r\n        isAuth: false,\r\n        errorMessage: action.error\r\n    }\r\n}\r\nexport const sendEmailRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        error: false,\r\n        errorMessage: '',\r\n        emailSended: false,\r\n        isLoadding: true,\r\n    }\r\n}\r\n\r\n\r\nexport const sendEmailSuccess = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        emailSended: true,\r\n        isLoadding: false,\r\n    }\r\n}\r\nexport const sendEmailFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        error: true,\r\n        errorMessage: action.error,\r\n    }\r\n}\r\n\r\n\r\nexport const updateEmailRequest = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        error: false,\r\n        errorMessage: '',\r\n        emailChanged: false,\r\n        passwordChanged: false,\r\n        isLoadding: true    \r\n    }\r\n}\r\nexport const updateEmailSuccess = (state = INITIAL_STATE, action) => { \r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        emailChanged: true,\r\n    }\r\n}\r\nexport const updateEmailFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        emailChanged: false,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\n\r\nexport const updatePasswordRequest = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        error: false,\r\n        errorMessage: '',\r\n        passwordChanged: false,\r\n        emailChanged: false,\r\n        isLoadding: true    \r\n    }\r\n}\r\nexport const updatePasswordSuccess = (state = INITIAL_STATE, action) => { \r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        passwordChanged: true,\r\n    }\r\n}\r\nexport const updatePasswordFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        passwordChanged: false,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\n\r\nexport const removeProfileRequest = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        error: false,\r\n        errorMessage: '',\r\n        isLoadding: true    \r\n    }\r\n}\r\nexport const removeProfileSuccess = (state = INITIAL_STATE, action) => { \r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n    }\r\n}\r\nexport const removeProfileFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\nexport const resetAuth = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        error: false,\r\n        errorMessage: '',\r\n        isLoadding: false,\r\n        emailChanged: false, \r\n        emailSended: false,\r\n        passwordChanged: false,\r\n    }\r\n} \r\n\r\n\r\nexport const HANDLERS = {\r\n\r\n    [Types.AUTH_REQUEST]: authRequest,\r\n    [Types.AUTH_SUCCESS]: authSuccess,\r\n    [Types.AUTH_FAILURE]: authFailure,\r\n\r\n    [Types.SEND_EMAIL_REQUEST]: sendEmailRequest,\r\n    [Types.SEND_EMAIL_SUCCESS]: sendEmailSuccess,\r\n    [Types.SEND_EMAIL_FAILURE]: sendEmailFailure,\r\n\r\n    [Types.DESTROY_AUTH_REQUEST]: destroyAuthRequest,\r\n    [Types.DESTROY_AUTH_SUCCESS]: destroyAuthSuccess,\r\n    [Types.DESTROY_AUTH_FAILURE]: destroyAuthFailure,\r\n    [Types.RESET_AUTH]: resetAuth, //used by: login, register, settings and home\r\n\r\n\r\n    [Types.SIGNIN_REQUEST]: signinRequest,\r\n    [Types.SIGNIN_SUCCESS]: signinSuccess,\r\n    [Types.SIGNIN_FAILURE]: signinFailure,\r\n\r\n    [Types.CREATE_PROFILE_REQUEST]: createProfileRequest,\r\n    [Types.CREATE_PROFILE_SUCCESS]: createProfileSuccess,\r\n    [Types.CREATE_PROFILE_FAILURE]: createProfileFailure,  \r\n\r\n    [Types.UPDATE_EMAIL_REQUEST]: updateEmailRequest,\r\n    [Types.UPDATE_EMAIL_SUCCESS]: updateEmailSuccess,\r\n    [Types.UPDATE_EMAIL_FAILURE]: updateEmailFailure,\r\n\r\n    [Types.UPDATE_PASSWORD_REQUEST]: updatePasswordRequest,\r\n    [Types.UPDATE_PASSWORD_SUCCESS]: updatePasswordSuccess,\r\n    [Types.UPDATE_PASSWORD_FAILURE]: updatePasswordFailure,\r\n\r\n    [Types.REMOVE_PROFILE_REQUEST]: removeProfileRequest,\r\n    [Types.REMOVE_PROFILE_SUCCESS]: removeProfileSuccess,\r\n    [Types.REMOVE_PROFILE_FAILURE]: removeProfileFailure,\r\n    \r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS)","import { createReducer } from 'reduxsauce'\r\nimport { Types } from '../actionCreators'\r\n\r\n\r\nexport const INITIAL_STATE = {\r\n    isLoadding: false,\r\n    saved: false,\r\n    data: {},\r\n    error: false,\r\n    errorMessage: ''\r\n}\r\n\r\nexport const getCommentsRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: true,\r\n        saved: false,\r\n        error: false,\r\n        errorMessage: ''\r\n    }\r\n}\r\nexport const getCommentsSuccess = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        data: action.comments\r\n    }\r\n}\r\nexport const getCommentsFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\nexport const createCommentRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        saved: false,\r\n        error: false,\r\n        errorMessage: '',\r\n        isLoadding: true\r\n    }\r\n}\r\nexport const createCommentSuccess = (state = INITIAL_STATE, action) => {\r\n    const comment = action.comment\r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        saved: true,\r\n        data: {...state.data, comment}\r\n    }\r\n}\r\nexport const createCommentFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\n\r\nexport const removeCommentRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        error: true,\r\n        errorMessage: '',\r\n        saved: false,\r\n        isLoadding: true,\r\n    }\r\n}\r\nexport const removeCommentSuccess = (state = INITIAL_STATE, action) => {\r\n    let newComments = {}\r\n    Object.keys(state.data).map(value => value !== action.comment.newcomment ? newComments = {...newComments, [value] : state.data[value]} : null)\r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        saved: true,\r\n        data: newComments\r\n    }\r\n}\r\nexport const removeCommentFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        saved: false,\r\n        error: true,\r\n        errorMessage: action.message,\r\n    }\r\n}\r\n\r\n\r\nexport const destroyComments = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        saved: false,\r\n        data: {},\r\n        error: false,\r\n        errorMessage: '',\r\n    }\r\n}\r\n\r\n\r\nexport const HANDLERS = {\r\n    [Types.GET_COMMENTS_REQUEST]: getCommentsRequest,\r\n    [Types.GET_COMMENTS_SUCCESS]: getCommentsSuccess,\r\n    [Types.GET_COMMENTS_FAILURE]: getCommentsFailure,\r\n\r\n    [Types.CREATE_COMMENT_REQUEST]: createCommentRequest,\r\n    [Types.CREATE_COMMENT_SUCCESS]: createCommentSuccess,\r\n    [Types.CREATE_COMMENT_FAILURE]: createCommentFailure,\r\n    \r\n    [Types.REMOVE_COMMENT_REQUEST]: removeCommentRequest,\r\n    [Types.REMOVE_COMMENT_SUCCESS]: removeCommentSuccess,\r\n    [Types.REMOVE_COMMENT_FAILURE]: removeCommentFailure,\r\n\r\n    [Types.DESTROY_COMMENTS]: destroyComments,\r\n    \r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS)","import { createReducer } from 'reduxsauce'\r\nimport { Types } from '../actionCreators'\r\n\r\nexport const INITIAL_STATE = {\r\n    isLoadding: false,\r\n    saved: false,\r\n    data: {},\r\n    serie: {},\r\n    error: false,\r\n    errorMessage: ''\r\n}\r\n\r\nexport const getSeriesRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: true,\r\n        saved: false,          //when we create or update a serie, is redirect for Serie Component and saved will be falsy\r\n        error: false,\r\n        errorMessage: ''     \r\n    }\r\n}\r\nexport const getSeriesSuccess = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        data: action.series\r\n    }\r\n}\r\nexport const getSeriesFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false, \r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createSerieRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        error: false,\r\n        errorMessage: '',\r\n        isLoadding: false, \r\n    }\r\n}\r\nexport const createSerieSuccess = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: false, \r\n        saved: true,\r\n        data: action.serie\r\n    }\r\n}\r\nexport const createSerieFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,  \r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\n\r\nexport const getSerieRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        data: {},\r\n        isLoadding: true,\r\n        error: false,\r\n        errorMessage: ''\r\n    }\r\n}\r\nexport const getSerieSuccess = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        serie: action.serie\r\n    }\r\n}\r\nexport const getSerieFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        error: true,\r\n        errorMessage: action.error\r\n        \r\n    }\r\n}\r\nexport const updateSerieRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: true,\r\n        error: false,\r\n        errorMessage: ''\r\n    }\r\n}\r\nexport const updateSerieSuccess = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        saved: true,\r\n        //data: action.serie,\r\n        error: false,\r\n        errorMessage: '',\r\n        //serie: {},\r\n    }\r\n}\r\nexport const updateSerieFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        error: true,\r\n        errorMessage: action.error\r\n    }\r\n}\r\n\r\n\r\nexport const removeSerieRequest  = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoadding: true,\r\n        error: false,\r\n        errorMessage: '',\r\n    }\r\n}\r\nexport const removeSerieSuccess = (state = INITIAL_STATE, action) => {\r\n    let newSeries = {}\r\n    Object.keys(state.data).map(value => value !== action.serie ? newSeries = {...newSeries, [value] : action.data[value]} : null)\r\n    return {\r\n        ...state,\r\n        isLoadding: false,\r\n        data: newSeries\r\n    }\r\n}\r\nexport const removeSerieFailure = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        error: true,\r\n        errorMessage: action.error   \r\n    }\r\n}\r\n\r\n\r\nexport const destroySeries = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        isLoadding: false,\r\n        data: {},\r\n        serie : {},\r\n        error: false,\r\n        errorMessage: '' \r\n    }\r\n}\r\n\r\nexport const resetSeries = (state = INITIAL_STATE, action) => {\r\n    return{\r\n        ...state,\r\n        error: false,\r\n        errorMessage: '',\r\n        isLoadding: false,\r\n    }\r\n} \r\n\r\n\r\nexport const HANDLERS = {\r\n    [Types.GET_SERIES_REQUEST]: getSeriesRequest,\r\n    [Types.GET_SERIES_SUCCESS]: getSeriesSuccess,\r\n    [Types.GET_SERIES_FAILURE]: getSeriesFailure,\r\n\r\n    [Types.CREATE_SERIE_REQUEST]: createSerieRequest,\r\n    [Types.CREATE_SERIE_SUCCESS]: createSerieSuccess,\r\n    [Types.CREATE_SERIE_FAILURE]: createSerieFailure,\r\n\r\n    [Types.GET_SERIE_REQUEST]: getSerieRequest,\r\n    [Types.GET_SERIE_SUCCESS]: getSerieSuccess,\r\n    [Types.GET_SERIE_FAILURE]: getSerieFailure,\r\n    [Types.UPDATE_SERIE_REQUEST]: updateSerieRequest,\r\n    [Types.UPDATE_SERIE_SUCCESS]: updateSerieSuccess,\r\n    [Types.UPDATE_SERIE_FAILURE]: updateSerieFailure,\r\n\r\n    [Types.REMOVE_SERIE_REQUEST]: removeSerieRequest,\r\n    [Types.REMOVE_SERIE_SUCCESS]: removeSerieSuccess,\r\n    [Types.REMOVE_SERIE_FAILURE]: removeSerieFailure,\r\n\r\n    [Types.DESTROY_SERIES]: destroySeries,\r\n\r\n    [Types.RESET_SERIES]: resetSeries //used for newSerie, because it doesn't call any function in didMoutn\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS)\r\n","import { combineReducers } from 'redux'\r\n\r\nimport auth from './auth'\r\nimport comments from './comments'\r\nimport series from './series'\r\nconst rootReducer = combineReducers({\r\n    auth,\r\n    comments,\r\n    series\r\n})\r\n\r\nexport default rootReducer","import { \r\n    createStore,\r\n    applyMiddleware \r\n} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport sagas from './sagas'\r\nimport reducers from './reducers'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport default createStore(\r\n    reducers,\r\n    applyMiddleware(sagaMiddleware)     //montando o saga midleware para poder rodar as sagas\r\n)\r\nsagaMiddleware.run(sagas) //rodando as sagas\r\n\r\n","  import styled from 'styled-components'\r\n\r\n\r\nconst BodyNav = styled.div`\r\n\r\n\r\n@media (max-width: 768px) { \r\n  .fa-bars{\r\n    border-radius: 4px \r\n    background: #991818\r\n    box-shadow: inset  0px 0px 10px 2px\r\n    border: none\r\n    width: 60px\r\n  }\r\n  .fa-bars:hover{\r\n    border-radius: 7px\r\n    background: #991818\r\n    box-shadow: 0px 0px 15px 5px \r\n    border: none\r\n  }\r\n  .fa{\r\n    width: 55px\r\n  }\r\n  .navbar-nav{\r\n    width: 156px\r\n    position: absolute\r\n  }\r\n  #navbarSupportedContent{\r\n    display: ${props => props.displayUl === 'block'? 'block': 'none'}\r\n  }\r\n\r\n  .nav-item{\r\n    background-color: rgba(0, 0, 0, 0.5)\r\n    border-radius: 5px\r\n  }\r\n\r\n  .nav-link{\r\n    color: red\r\n  }\r\n  .nav-link:hover {\r\n    color:white \r\n  }\r\n  .fa:focus{   \r\n    outline: 0\r\n  }\r\n  .setting {\r\n    background-color: rgba(0, 0, 0, 0.7)\r\n  }\r\n  ul{\r\n    background-color: rgba(0, 0, 0, 0.5)\r\n    border-radius: 5px\r\n  }\r\n\r\n  .iconeHome {\r\n    display: ${props => props.display === '' ? 'block' : 'none'}\r\n    color: white\r\n    margin-left: -2%;\r\n  }\r\n  .iconeSeries {\r\n    display: ${props => props.display === 'Action' || props.display === 'Drama' || props.display === 'Comedy' ? 'inline'  : 'none'}\r\n    color: white\r\n    margin-left: -2%;\r\n  }\r\n  .iconeNewSeries {\r\n    display: ${props => props.display === 'new' ? 'block' : 'none'}\r\n    color: white\r\n    margin-left: -2%;\r\n  }\r\n  .iconeAbout {\r\n    display: ${props => props.display === 'about' ? 'block' : 'none'}\r\n    color: white\r\n    margin-left: -2%;\r\n  }\r\n  .iconeComment {\r\n    display: ${props => props.display === 'comments'? 'block'  : 'none'}\r\n    color: white\r\n    margin-left: -2%;\r\n  }\r\n  .iconeSignIn {\r\n    display: ${props => props.display === 'login'  ? 'block' : 'none'}\r\n    color: white\r\n    margin-left: -2%;\r\n  }\r\n  .iconeRegister {\r\n    display: ${props => props.display === 'register' ? 'block' : 'none'}\r\n    color: white\r\n    margin-left: -2%;\r\n  }\r\n  .iconeSetting{\r\n    display: ${props => props.display === 'setting' ? 'block' : 'none'}\r\n    color: white\r\n    margin-left: -2%;\r\n  }\r\n  ul{\r\n    margin-top: 50px\r\n  }\r\n} \r\n\r\n@media (min-width: 768px) and (max-width: 992px) { \r\n  .nav-link {\r\n    color: #BDBDBD\r\n  }\r\n  .nav-link:hover {\r\n    color: white\r\n  }\r\n  .iconeHome {\r\n    position: relative\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === '' ? 'none' : 'none'}\r\n  }\r\n  .iconeSeries {\r\n    position: relative\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === 'Action' || props.display === 'Drama' || props.display === 'Comedy' ? 'none'  : 'none'}\r\n  }\r\n  .iconeNewSeries {\r\n    position: relative\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === 'new' ? 'none'  : 'none'}\r\n  }\r\n  .iconeAbout {\r\n    position: relative\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === 'about' ? 'none'  : 'none'}\r\n  }\r\n  .iconeComment {\r\n    position: relative\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === 'comments'? 'none'  : 'none'}\r\n  }\r\n  .iconeSignIn {\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === 'login'  ? 'none'  : 'none'}\r\n    color: white\r\n  }\r\n  .iconeRegister {\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === 'register' ? 'none'  : 'none'}\r\n    color: white\r\n  }\r\n  .iconeSetting {\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === 'setting' ? 'none'  : 'none'}\r\n    color: white\r\n  }\r\n  .iconeEditSerie{\r\n    margin-left: -2%;\r\n    margin-right: 0%;\r\n    display: ${props => props.display === 'edit' ? 'none' : 'none'}\r\n    color: white\r\n  }\r\n\r\n  ul {\r\n    height: 40px\r\n    margin-bottom: 12px\r\n    padding-left: -5px \r\n  }\r\n  li {\r\n    background: #A90B21;\r\n    border-radius: 4px\r\n    top: 5px;\r\n    margin-right: 1px\r\n    white-space: nowrap             //nao quebra linha de jeito nenhum\r\n  }\r\n}\r\n\r\n@media (min-width: 992px) {\r\n  .nav-link {\r\n    color: #BDBDBD\r\n  }\r\n  .nav-link:hover {\r\n    color: white\r\n  }\r\n  .iconeHome {\r\n    display: ${props => props.display === '' ? 'block' : 'none'}\r\n  }\r\n  .iconeSeries {\r\n    display: ${props => props.display === 'Action' || props.display === 'Drama' || props.display === 'Comedy' ? 'inline'  : 'none'}\r\n  }\r\n  .iconeNewSeries {\r\n    display: ${props => props.display === 'new' ? 'block' : 'none'}\r\n  }\r\n  .iconeAbout {\r\n    display: ${props => props.display === 'about' ? 'block' : 'none'}\r\n  }\r\n  .iconeComment {\r\n    display: ${props => props.display === 'comments'? 'block'  : 'none'}\r\n  }\r\n  .iconeSignIn {\r\n    display: ${props => props.display === 'login'  ? 'block' : 'none'}\r\n  }\r\n  .iconeRegister {\r\n    display: ${props => props.display === 'register' ? 'block' : 'none'}\r\n  }\r\n  .iconeSetting {\r\n    display: ${props => props.display === 'setting' ? 'block' : 'none'}\r\n  }\r\n  .iconeEditSerie{\r\n    display: ${props => props.display === 'edit' ? 'block' : 'none'}\r\n  }\r\n\r\n  li{\r\n    background: #A90B21;\r\n    border-radius: 4px\r\n    top: 5px;\r\n    margin-right: 8px\r\n    box-shadow: 2px 2px 5px 1px\r\n  }\r\n  li:hover {\r\n    box-shadow: 0px 0px 0px 0px\r\n  }\r\n  .active{\r\n    box-shadow: 1px 1px 5px 1px\r\n  }\r\n  \r\n  ul {\r\n    height: 40px \r\n    margin-bottom: 12px\r\n    margin-left: -50px\r\n  }\r\n  \r\n}\r\n\r\nnav {\r\n  background: #991818; \r\n  box-shadow: 0px 0px 15px 8px;\r\n  height: 80px\r\n}\r\n\r\n.dropdown {\r\n  top:0px;\r\n  position: relative\r\n}\r\n\r\n#logo{\r\n  background: black\r\n  border: none\r\n}\r\n#logo:hover{\r\n  box-shadow: inset 0px 0px 5px 5px #999494\r\n  background: white\r\n  cursor: alias\r\n  border: none\r\n}\r\n\r\n\r\n`\r\nexport default BodyNav","import React, {Component, Fragment} from 'react'\r\nimport {\r\n  Link\r\n} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport ActionCreator from '../../../redux/actionCreators'\r\n\r\nimport BodyNav from './BodyNav'\r\n\r\n\r\nclass ScreensElementsNav extends Component {\r\n  \r\n  state = {\r\n    finalPath: '',\r\n    displayUl: 'none'\r\n  }\r\n\r\n  componentDidUpdate(){\r\n      const valuesPath = window.location.href.split('/')\r\n      let component = valuesPath[window.location.href.split('/').length-1] \r\n      \r\n      if (valuesPath[window.location.href.split('/').length-3] === 'edit'){\r\n        component = 'edit'\r\n      }\r\n      if (component !== this.state.finalPath){\r\n        this.setState({finalPath: component})\r\n      }\r\n  }\r\n\r\n  selected = (event) => {\r\n    if (event.target.type !== 'button'){\r\n      const valuesPath = event.target.href.split('/')\r\n      const component = valuesPath[event.target.href.split('/').length-1]\r\n      this.setState({finalPath: component, displayUl: 'none'})\r\n    }else{\r\n      if (this.state.displayUl === 'block'){\r\n        this.setState({displayUl: 'none'})\r\n      }else{\r\n        this.setState({displayUl: 'block'})\r\n      }\r\n    } \r\n  }\r\n  \r\n  voltarTopo = () => {\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.destroyAuth()\r\n    this.props.destroyComments()\r\n    this.props.destroySeries()\r\n  }\r\n\r\n  render() {\r\n    const finalPath = this.state.finalPath  \r\n    return (\r\n        <Fragment>\r\n            <BodyNav display={finalPath} displayUl={this.state.displayUl}>\r\n              <nav className=\"navbar navbar-expand-md mb-4 fixed-top\">\r\n                <div className=\"container\">\r\n                  <span onClick={this.voltarTopo} id=\"logo\" className=\"mr-3 img-thumbnail\">\r\n                      <img src=\"/images/logo2.png\" height=\"30\" alt=\"logo\" /> \r\n                  </span>\r\n                    <button className={`fa fa-bars fa-2x navbar-toggler`} onClick={this.selected} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n                    <i className=\"fa fa-home fa-3x iconeHome\"></i>\r\n                    <i className=\"fa fa-database fa-3x iconeSeries\"></i>\r\n                    <i className=\"fa fa-upload fa-3x iconeNewSeries\"></i>\r\n                    <i className=\"fa fa-info-circle fa-3x iconeAbout\"></i>\r\n                    <i className=\"fa fa-comments fa-3x iconeComment\"></i>\r\n                    <i className=\"fa fa-space-shuttle fa-3x iconeSignIn\"></i>\r\n                    <i className=\"fa fa-address-card fa-3x iconeRegister\"></i>\r\n                    <i className=\"fa fa-cog fa-3x iconeSetting\"></i>\r\n                    {finalPath === 'edit' &&\r\n                      <i className=\"fa fa-wrench fa-3x iconeEditSerie\"></i>\r\n                    }\r\n                    <div className='collapse navbar-collapse'  id=\"navbarSupportedContent\">\r\n                      <ul className=\"navbar-nav nav-pills my-auto mx-auto\" id=\"componentsList\">\r\n                        <li className=\"nav-item\">\r\n                          <Link onClick={this.selected} className= {`nav-link font-weight-bold ${finalPath === '' && 'active'}`} to=\"/\">Home</Link>\r\n                        </li>  \r\n                        <li className= \"nav-item dropdown\">\r\n                          <Link className= {`nav-link font-weight-bold ${(finalPath === 'Action' || finalPath === 'Comedy' || finalPath === 'Drama') && 'active'} dropdown-toggle`}  id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" to=''>Series</Link>\r\n                          <div className='dropdown-menu' aria-labelledby=\"dropdownMenuButton\">\r\n                            <Link onClick={this.selected} className={` dropdown-item ${finalPath === 'Action' && 'active'}`}  to=\"/series/Action\">Action</Link>\r\n                            <Link onClick={this.selected} className={` dropdown-item ${finalPath === 'Comedy' && 'active'}`} to=\"/series/Comedy\">Comedy</Link>\r\n                            <Link onClick={this.selected} className={` dropdown-item ${finalPath === 'Drama' && 'active'}`} to=\"/series/Drama\">Drama</Link>\r\n                          </div>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <Link onClick={this.selected} className={`nav-link font-weight-bold ${finalPath === 'new' && 'active'}`}  to=\"/new\">New Serie</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <Link onClick={this.selected} className={`nav-link font-weight-bold ${finalPath === 'about' && 'active'} `}  to=\"/about\">About</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <Link onClick={this.selected} className={`nav-link font-weight-bold ${finalPath === 'comments' && 'active'}`}  to=\"/comments\">Comments</Link>\r\n                        </li>\r\n                        {!this.props.auth.isAuth && \r\n                          <li className=\"nav-item\">\r\n                            <Link onClick={this.selected} className={`nav-link text-info mb-2 font-weight-bold bg-dark`}  to=\"/user/login\">Login</Link>\r\n                          </li>\r\n                        }\r\n                        {this.props.auth.isAuth && \r\n                          <li className=\"nav-item\">\r\n                            <Link onClick={this.selected} className={`nav-link font-weight-bold bg-info  setting text-dark ${finalPath === 'setting' && 'active'}`} to={`/user/setting`}>Setting</Link>\r\n                          </li> \r\n                        }\r\n                        {this.props.auth.isAuth && \r\n                          <li className=\"nav-item\">\r\n                            <Link className={`nav-link text-dark font-weight-bold bg-warning`} onClick={this.logout} to=\"/\">Leave</Link>\r\n                          </li> \r\n                        } \r\n                        {!this.props.auth.isAuth && <li className=\"nav-item\">\r\n                            <Link className={`nav-link text-info font-weight-bold bg-dark`} onClick={this.selected}  to=\"/user/register\">Register</Link>\r\n                          </li>\r\n                        }\r\n                      </ul>    \r\n                    </div>\r\n                </div>\r\n              </nav>\r\n            </BodyNav>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    comments: state.comments,\r\n    series: state.series\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    destroyAuth : () => dispatch(ActionCreator.destroyAuthRequest()),\r\n    destroyComments : () => dispatch(ActionCreator.destroyComments()),\r\n    destroySeries : () => dispatch(ActionCreator.destroySeries()),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreensElementsNav) ","import React, {Fragment, Component} from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport ActionCreator from '../redux/actionCreators'\r\n\r\nconst BodyHome = styled.div`\r\n\r\n    @media (min-width: 320px) { \r\n    \r\n        img{\r\n            max-height: 150px\r\n        }\r\n        \r\n        .logo{\r\n            width: 180px\r\n        }\r\n      \r\n    }\r\n    @media (min-width: 380px) { \r\n    \r\n        img{\r\n            max-height: 200px\r\n        }\r\n        \r\n        .logo{\r\n            width: 200px\r\n        }\r\n      \r\n    }\r\n    \r\n    @media (min-width: 480px)  { \r\n        \r\n        img{\r\n            max-height: 250px\r\n        }\r\n        \r\n        .logo{\r\n            width: 250px\r\n        }\r\n      \r\n    } \r\n    @media (min-width: 586px)  { \r\n        \r\n        img{\r\n            max-height: 280px\r\n        }\r\n        \r\n        .logo{\r\n            width: 270px\r\n        }\r\n      \r\n    } \r\n    @media (min-width: 768px) and (max-width: 992px) { \r\n        \r\n        img{\r\n            max-height: 380px\r\n        }\r\n        \r\n        .logo{\r\n            width: 300px\r\n        }\r\n      \r\n    }\r\n    @media (min-width: 992px) and (max-width: 1200px){ \r\n        \r\n        img{\r\n            max-height: 500px\r\n        }\r\n        \r\n        .logo{\r\n            width: 350px\r\n        }\r\n      \r\n    }\r\n    @media (min-width: 1200px) { \r\n        \r\n        img{\r\n            max-height: 550px\r\n        }\r\n        \r\n        .logo{\r\n            width: 400px\r\n        }\r\n      \r\n    }\r\n\r\n`\r\n\r\nclass ScreensHome extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.reset() \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <BodyHome>\r\n                    <section>\r\n                        <div>\r\n                            <img alt=\"logo\" className=\"d-block img-responsive logo mx-auto\" src=\"images/logo2.png\" />\r\n                            <p className=\"text-secondary\">Never more forget a serie you watched or someone told you to see.</p>\r\n                        </div>\r\n                    </section>\r\n                    <section>\r\n                        <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                            <ol className=\"carousel-indicators\">\r\n                                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\r\n                                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n                                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n                            </ol>\r\n                                <div className=\"container\">\r\n                                    <div className=\"carousel-inner\">\r\n                                        <div className=\"carousel-item active\">\r\n                                            <img className=\"d-block w-100 img-responsive\" src=\"/images/acao.jpg\" alt=\"First slide\"></img>\r\n                                        </div>\r\n                                        <div className=\"carousel-item\">\r\n                                            <img className=\"d-block w-100 img-responsive\" src=\"/images/comedia.jpg\" alt=\"Second slide\"></img>\r\n                                        </div>\r\n                                        <div className=\"carousel-item\">\r\n                                            <img className=\"d-block w-100 img-responsive\" src=\"/images/drama.jpg\" alt=\"Third slide\"></img>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Previous</span>\r\n                            </a>\r\n                            <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Next</span>\r\n                            </a>\r\n                        </div>\r\n                    </section>\r\n                </BodyHome>\r\n            </Fragment>\r\n        )\r\n    }\r\n    \r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        reset : () => dispatch(ActionCreator.resetAuth()) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreensHome) \r\n","import React, {Fragment} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst BodyAbout = styled.div`\r\n\r\n.corTexto {\r\n    color: white\r\n}\r\n\r\nh1{\r\n    font-family: Brush Serpt, cursive;\r\n}\r\n\r\n`\r\n\r\nconst ScreensAbout = () => {\r\n    return (\r\n        <Fragment>\r\n            <BodyAbout>\r\n                <h1 className=\"jumbotron font-weight-bold\">Make your life more simple, with smart and easy solutions</h1>\r\n                <h4 className=\"text-monospace corTexto container\">We are a company that creates software solutions, both web and mobile, that helps people to have greater and better control\r\n                 of its life and its businesses, where the system besides providing more time, also of more convenience and security to the user who uses it\r\n                </h4>\r\n           </BodyAbout>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ScreensAbout","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n\r\n    width: ${props => props.width ? props.width : '100%'}\r\n    background: ${props => props.background ? props.background : 'black'}\r\n    color: ${props => props.color ? props.color : 'white'}\r\n    border: none\r\n    \r\n    :focus{  \r\n        outline: 0\r\n    }\r\n\r\n\r\n  .button {\r\n    min-width: 100px;\r\n    height: 50px;\r\n    border: none;\r\n    color: #ffffff;\r\n    pading: 20px;\r\n    font-size: 24px;\r\n    border-radius: 10px;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    transition: all 900ms ease\r\n  }\r\n\r\n  .button:focus{\r\n    outline: 0\r\n  } \r\n    \r\n\r\n  .button1 {\r\n    border-radius: 3px;\r\n    padding: 0.25em 1em;\r\n    margin: 0 1em;\r\n    background: transparent;\r\n    color: palevioletred;\r\n    border: 2px solid palevioletred;\r\n  }\r\n\r\n\r\n\r\n  .button2 {\r\n    background: rgb(8, 131, 168)\r\n  }\r\n  .button2:hover {\r\n    background: white;\r\n    color : rgba(5, 182, 236, 0.822);\r\n    box-shadow: 0px 0px 25px 10px;\r\n  }\r\n\r\n\r\n\r\n  @keyframes bounce {\r\n    0%, 20%, 60%, 100% {\r\n      -webkit-transform: translateY(0);\r\n      trasform: translateY(0):\r\n    }\r\n    40% {\r\n      -webkit-transform: translateY(-20px);\r\n      trasform: translateY(-20px):\r\n    }\r\n    80% {\r\n      -webkit-transform: translateY(-10px);\r\n      trasform: translateY(-10px):\r\n    }\r\n  }\r\n  .button3{\r\n    background: #f18f01;\r\n  }\r\n  .button3:hover{\r\n    animation: bounce 700ms\r\n  }\r\n\r\n\r\n  .button4{\r\n    background: #376693;\r\n    transform-style: preserve-3d;\r\n  }\r\n  .button4:after{\r\n    top: 0px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 97%;\r\n    padding: 5px;\r\n    position: absolute;\r\n    background: #3a9999;\r\n    border-radius: 10px;\r\n    content: \"Salvar\";\r\n    transform-origin: left bottom;\r\n    transform: rotateX(90deg);\r\n  }\r\n  .button4:hover{\r\n    transform-origin: center bottom;\r\n    transform: rotateX(-90deg) translateY(100%)\r\n  }\r\n  \r\n  `\r\n\r\n\r\nexport default Button","import React from 'react'\r\n\r\nimport Button from '../../elements/Button'\r\n\r\nconst statsgenre = {\r\n    '0': 'Action',\r\n    '1': 'Comedy',\r\n    '2': 'Drama'\r\n} \r\n\r\nconst statsuser = {\r\n    '0' : 'Watched',\r\n    '1': 'Watching',\r\n    '2': 'Watch' \r\n}\r\n\r\nconst FormSeries = (props) => {\r\n\r\n    return (   \r\n        <div className='mx-auto' style={{maxWidth:'60%'}}>  \r\n            {!props.series.isLoadding ?\r\n                <Button>\r\n                    Name: <input type=\"text\" value={props.state.name} onChange={props.handleChange('name')} className=\"form-control\" /><br />\r\n                    Status: {<span>&nbsp;</span>} \r\n                    <select value={props.state.status} onChange={props.handleChange('status')}>\r\n                        <option style={{display:'none'}}>Select</option>\r\n                        {Object.keys(statsuser)\r\n                            .map(key => <option key={key}>{statsuser[key]}</option>)}\r\n                    </select><br/><br/>\r\n                    Genre: {<span>&nbsp;</span>} \r\n                    <select value={props.state.genre} onChange={props.handleChange('genre')}>\r\n                        <option style={{display:'none'}}>Select</option>\r\n                        {Object.keys(statsgenre)\r\n                            .map(key => <option key={key}>{statsgenre[key]}</option>)}\r\n                    </select><br/><br/>\r\n                    Notes: <textarea type='text' value={props.state.notes} onChange={props.handleChange('notes')} className=\"form-control\"></textarea><br />\r\n                    <button className=\"button button2 mt-4\" type=\"button\" onClick={() => props.saveSeries()}>Save</button>\r\n                </Button> :\r\n                <p className='text-info'>Waitting...</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSeries","import React, { Component, Fragment } from 'react'\r\nimport  {Redirect, Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport ActionCreator from '../redux/actionCreators'\r\nimport styled from 'styled-components'\r\n\r\nimport FormSeries from './elements/FormSeries'\r\n\r\n\r\nconst BodyNewSerie = styled.div`\r\n    .positionMessage{\r\n        position: absolute \r\n        width: 100%\r\n        top: 400px\r\n      }\r\n`\r\n\r\nclass ScreensNewSeries extends Component{\r\n    state = { \r\n        name: '',\r\n        status: '',\r\n        genre: '',\r\n        notes: '',\r\n        redirect: ''    \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.reset() \r\n    }\r\n\r\n    handleChange = field => event => {\r\n        this.setState({[field] : event.target.value})\r\n    }\r\n\r\n    saveSeries = () => {\r\n        if (this.state.name === ''){\r\n            this.props.error('The series need to have a name!')\r\n            return\r\n        }\r\n        if (this.state.status === ''){\r\n            this.props.error('Select a status!')\r\n            return\r\n        }\r\n        if (this.state.genre === ''){\r\n            this.props.error('Select a genre!')\r\n            return\r\n        }\r\n        const serie = {\r\n            name : this.state.name,\r\n            status : this.state.status,\r\n            genre : this.state.genre,\r\n            notes : this.state.notes\r\n        }\r\n        const {uid} = this.props.auth.user\r\n        this.props.saveSeries(serie, uid)   \r\n        this.setState({\r\n            name: '',\r\n            status: '',\r\n            genre: '',\r\n            notes: '',\r\n            redirect: `/series/${this.state.genre}`\r\n        })   \r\n    }\r\n  \r\n    render(){\r\n            return (\r\n                <Fragment>\r\n                    {this.props.series.saved && <Redirect to={this.state.redirect} />}\r\n                    <BodyNewSerie>\r\n                        {this.props.series.error && \r\n                            <p className='text-danger positionMessage'>{this.props.series.errorMessage}</p>\r\n                        }\r\n                        {this.props.series.isLoadding && \r\n                            <p className='text-success positionMessage'>Waiting...</p>\r\n                        }\r\n                        {this.props.auth.isAuth ?\r\n                            <div>\r\n                                <div>\r\n                                    <FormSeries handleChange={this.handleChange} saveSeries={this.saveSeries} auth={this.props.auth} series={this.props.series} state={this.state}/>\r\n                                </div>\r\n                            </div> :\r\n                            <h2 className='text-warning'>Do login to add series! <Link to={'/user/login'}>Login</Link></h2>\r\n                        }     \r\n                    </BodyNewSerie>      \r\n                </Fragment>          \r\n            )\r\n        }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        series : state.series,\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveSeries : (serie, uid) => dispatch(ActionCreator.createSerieRequest(serie, uid)),\r\n        error : message => dispatch(ActionCreator.createSerieFailure(message)),\r\n        reset : () => dispatch(ActionCreator.resetSeries())\r\n    }\r\n}\r\n        \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreensNewSeries) \r\n","import React, {Component, Fragment} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport ActionCreator from '../redux/actionCreators'\r\n\r\nimport styled from 'styled-components'\r\n\r\nvar BodySeries = styled.div`\r\n\r\n\r\n.card {\r\n    border: none;\r\n    background: black;\r\n}\r\n\r\n.card-body {\r\n    background: black;\r\n}\r\n\r\n#serie {\r\n    border: 1px solid grey\r\n    border-radius: 3px\r\n}\r\n\r\n#serie:hover, img:hover {\r\n    box-shadow: 0px 0px 25px 15px;\r\n}\r\n\r\n\r\n.jumbotron {\r\n    overflow: auto;\r\n    width: 30%;\r\n    border-radius: 10px;\r\n    background: #848484;\r\n    color: white    \r\n}\r\n\r\n`\r\n\r\nconst statsuser = {\r\n    'Assistido' : 'Watched',\r\n    'Assistindo': 'Watching',\r\n    'Assistir': 'Watch' \r\n}\r\n\r\n\r\nclass ScreensSeries extends Component {\r\n\r\n    componentDidMount = () => {  \r\n        if (this.props.auth.isAuth){\r\n            const {uid} = this.props.auth.user\r\n            this.props.load(this.props.match.params.genre, uid) \r\n        }  \r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.auth.isAuth){\r\n            if (prevProps.match.params.genre !== this.props.match.params.genre){\r\n                const {uid} = this.props.auth.user\r\n                this.props.load(this.props.match.params.genre, uid) \r\n            }\r\n        } \r\n    }\r\n    \r\n    deleteSeries(serie) { \r\n        const {uid} = this.props.auth.user\r\n        this.props.remove(serie, uid)\r\n    }\r\n\r\n\r\n    renderSeries = serie => { \r\n        return (        \r\n            <div className='mx-auto' key={serie.id}>\r\n                <BodySeries>\r\n                    <div id=\"serie\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h1 className= 'text-danger'>{serie.name.toUpperCase()}</h1>\r\n                                <h4 className='text-info'>{serie.status}</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <img className=\"img-fluid\" alt=\"Responsive\" src=\"http://placehold.it/700x350/000/fff\" />\r\n                            </div>\r\n                            <h3 className='text-info'>{statsuser[serie.status]}</h3>\r\n                        </div>\r\n                        <p className='text-light  mt-5'>Notes</p>\r\n                        <div  className=\"jumbotron ml-auto mr-auto\">\r\n                            {serie.notes}\r\n                        </div>\r\n                        <div className=\"d-flex flex-row-reverse mb-3 mr-5\">\r\n                            <div className=\"row\">\r\n                                <Link className=\"btn btn-success mr-3\" to={`/series/edit/${serie.genre}/${serie.id}`}>Edit</Link><br/>\r\n                                <Link className=\"btn btn-success\" to='#' onClick={() => this.deleteSeries(serie)}>Delete</Link>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                </BodySeries>\r\n                <br/>\r\n                <br/>\r\n            </div>    \r\n        )\r\n    }\r\n\r\n    \r\n    render(){\r\n        let keys = Object.keys(this.props.series.data)\r\n        return (\r\n            <Fragment>\r\n                {this.props.auth.isAuth ?\r\n                    <div>\r\n                        <h1 className=\"text-center text-white\">Series {this.props.match.params.genre}</h1>\r\n                        {this.props.series.isLoadding &&\r\n                            <p style={{position: 'absolute', width: '100%'}} className='text-info mx-auto'>Loadding...</p>    //used when we mount the component (after newSerie, edit, click into it, and refresh the page)         \r\n                        }   \r\n                        {this.props.series.error &&\r\n                            <p style={{position: 'absolute', width: '100%'}} className='text-danger mt-2 mx-auto'>{this.props.series.errorMessage}</p>    //used when we mount the component (after newSerie, edit, click into it, and refresh the page)         \r\n                        } \r\n                        <div className='mt-5 mx-auto' style={{width: '60%'}}>\r\n                            {!this.props.series.isLoading && this.props.series.data.length === 1 &&\r\n                                <div className='alert alert-info'>No series resgristred.\r\n                                    <br/>\r\n                                    <Link className=\"btn btn-default active\" to={\"/new\"}>Add</Link>\r\n                                </div>\r\n                            }   \r\n                            {!this.props.series.isLoading && this.props.series.data.length !== 1 && \r\n                                keys.map((value,key) => key !== keys.length ? \r\n                                (value = keys[keys.length-key]) && this.renderSeries(this.props.series.data[value]) :\r\n                                null)\r\n                            }\r\n                        </div>\r\n                    </div> :\r\n                    <h2 className='text-warning'>You need is logged in for seeing your series! <Link to='/user/login'>Login</Link></h2>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }  \r\n}\r\n        \r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        series: state.series,\r\n        auth : state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        load : (genre, uid) => dispatch(ActionCreator.getSeriesRequest(genre, uid)),\r\n        remove : (serie, uid) => dispatch(ActionCreator.removeSerieRequest(serie, uid))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreensSeries) \r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport  {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport ActionCreator from '../redux/actionCreators'\r\nimport styled from 'styled-components'\r\n\r\nimport FormSeries from './elements/FormSeries'\r\n\r\nconst BodyEdit = styled.div`\r\n    #editSerie{\r\n        width: 100%\r\n        position: absolute\r\n        top: 220px\r\n    }\r\n`\r\n\r\n\r\n\r\nclass ScreensEditSeries extends Component{\r\n   \r\n    state = {\r\n        name: '',\r\n        status: '',\r\n        genre: '',\r\n        notes: '',\r\n        received: false\r\n    }\r\n    componentDidMount = () => {  \r\n        if (this.props.auth.isAuth){   \r\n            const serie  = {...this.props.match.params}\r\n            const {uid} = this.props.auth.user\r\n            this.props.load(serie, uid)\r\n        }  \r\n    }\r\n\r\n    componentDidUpdate(){                                                      //this case is to refresh page\r\n        if (!this.props.series.isLoadding && !this.state.received && this.props.series.serie.name !== undefined){\r\n            this.setState({\r\n                name: this.props.series.serie.name,\r\n                status: this.props.series.serie.status,\r\n                genre: this.props.series.serie.genre,\r\n                notes: this.props.series.serie.notes,\r\n                received: true \r\n            })\r\n        }\r\n    }\r\n\r\n    /*    this option works too for receive props\r\n    static getDerivedStateFromProps(newProps, prevState){\r\n        let serie = {}\r\n        if (prevState.name === '' || prevState.name === undefined){  \r\n            if (newProps.series.serie.name !== prevState.name){\r\n                serie.name = newProps.series.serie.name\r\n            }\r\n            \r\n            if (newProps.series.serie.genre !== prevState.genre){\r\n                serie.genre = newProps.series.serie.genre\r\n            }\r\n            \r\n            if (newProps.series.serie.status !== prevState.status){\r\n                serie.status = newProps.series.serie.status\r\n            }\r\n            if (newProps.series.serie.notes !== prevState.notes){\r\n                serie.notes = newProps.series.serie.notes\r\n            }\r\n            return serie\r\n        }           \r\n    }*/\r\n    \r\n    saveSeries = () => {\r\n        const {name, status, genre, notes} = this.state\r\n        if (name === ''){\r\n            this.props.error('Write the name of the serie!')\r\n            return\r\n        }\r\n        const id = this.props.match.params.id\r\n        const newSerie = {\r\n            id,\r\n            name,\r\n            status,\r\n            genre,\r\n            notes\r\n        }\r\n        const {uid} = this.props.auth.user\r\n        if (this.props.series.serie.genre !== this.state.genre){\r\n            this.props.remove(this.props.series.serie, uid)\r\n        }\r\n        this.props.save(newSerie, uid)\r\n        \r\n        \r\n    }\r\n\r\n    handleChange = field => event => {\r\n        this.setState({[field] : event.target.value})\r\n    }\r\n    \r\n    render(){ \r\n        return (\r\n            <BodyEdit>\r\n                {this.props.series.saved && <Redirect to={`/series/${this.state.genre}`}/>}\r\n                <div>\r\n                    <h1 className='text-white'>Edit Série</h1>\r\n                    {this.props.series.error && \r\n                        <div className='text-danger'>{this.props.series.errorMessage}</div>\r\n                    }\r\n                    <div id='editSerie'>\r\n                        <FormSeries handleChange={this.handleChange} saveSeries={this.saveSeries} auth={this.props.auth} series={this.props.series} state={this.state}/>\r\n                    </div>\r\n                </div>\r\n            </BodyEdit>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        series: state.series,\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        load : (serie, uid) => dispatch(ActionCreator.getSerieRequest(serie, uid)),\r\n        save: (newSerie, uid) => dispatch(ActionCreator.updateSerieRequest(newSerie, uid)),\r\n        remove : (serie, uid) => dispatch(ActionCreator.removeSerieRequest(serie, uid)),\r\n        error: message => dispatch(ActionCreator.updateSerieFailure(message))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreensEditSeries) \r\n","import React, {Fragment, Component} from 'react'\r\n\r\n\r\nclass Comment extends Component {\r\n\r\n    state = {\r\n        newcomment: ''\r\n    }   \r\n  \r\n    remove = comment => {\r\n        this.props.removeComment(comment)\r\n    }\r\n \r\n    renderComments = comment => {\r\n        return(\r\n            <Fragment key={comment.id}>\r\n                <div className=\"bg-light card mb-3\" >\r\n                    <div className=\"card-header\">\r\n                        <p className=\"text-muted h6\">Commented for: <span className=\"text-danger\">{comment.email}</span></p>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <span className=\"text-primary h4\">{comment.comment}</span><br/><br/>\r\n                        {this.props.user.email === comment.email &&  \r\n                            <div>\r\n                                <button type='button' className='btn btn-danger d-flex mx-auto' onClick={() => this.remove(comment.id)}>Deletar</button>\r\n                            </div>\r\n                        }              \r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        Written: <span>{comment.date}</span>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n   \r\n    render(){\r\n        const keys = Object.keys(this.props.comments)\r\n        return(  \r\n            <div className=\"container\">\r\n                {keys.map((value,key) => key !== keys.length ? this.renderComments(this.props.comments[keys[keys.length-(key+1)]]): null)}  \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Comment \r\n","import React, {Component, Fragment} from 'react'\r\n\r\nclass NewComment extends Component{\r\n    state = {\r\n        newcomment : ''\r\n    }\r\n    handleChange = event => {\r\n        this.setState({\r\n            newcomment: event.target.value\r\n        })\r\n    }\r\n    sendComment = date => {\r\n        this.props.sendComment(this.state.newcomment, date)\r\n        this.setState({\r\n            newcomment: ''\r\n        })\r\n    }\r\n    render(){\r\n        let date = new Date()\r\n        date = date.getDate()+\"/\"+(date.getMonth()+1)+\"/\"+date.getFullYear()\r\n        return(\r\n            <Fragment>\r\n                <textarea className='container col-6 form-control' placeholder='Write your comment...' value={this.state.newcomment} onChange={this.handleChange}></textarea>\r\n                <button className=\"btn btn-primary mt-5 mb-5\" onClick={() => this.sendComment(date)}>Send</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default NewComment\r\n","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport ActionCreator from '../../redux/actionCreators'\r\n\r\nimport Comment from './Comment'\r\nimport NewComment from './NewComment'\r\n\r\n\r\nclass ScreensComments extends Component {\r\n\r\n    componentDidMount(){\r\n        if (this.props.auth.isAuth){\r\n            this.props.load()\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.auth.isAuth && prevProps.comments.data !== this.props.comments.data && this.props.comments.saved){\r\n            this.props.load()\r\n        }\r\n    }\r\n\r\n    sendComment = (newcomment, date) => {\r\n        if (newcomment === ''){\r\n            this.props.error('Write a comment!')\r\n            return \r\n        }\r\n        const comment = {\r\n            newcomment,\r\n            date\r\n        }\r\n        this.props.sendComment(comment)\r\n    }\r\n\r\n    \r\n    removeComment = comment => {\r\n        this.props.remove(comment)\r\n    }\r\n\r\n    render(){\r\n        return(       \r\n            <div>\r\n                {this.props.auth.isAuth && <NewComment sendComment={this.sendComment} error={this.props.comments.error} errorMessage={this.props.comments.errorMessage}/>}\r\n                {this.props.auth.isAuth && !this.props.comments.isLoadding && this.props.comments.data && <Comment comments={this.props.comments.data} removeComment={this.removeComment} user={this.props.auth.user}/>}\r\n                {!this.props.comments.data && !this.props.comments.isLoadding && <h1 className='text-warning'>None comment added, be first!</h1>}\r\n                {this.props.comments.isLoadding && this.props.auth.isAuth &&\r\n                    <p style={{position: \"absolute\", width: '100vw', top: '190px'}} className='text-info'>Loadding...</p>\r\n                }\r\n                {this.props.comments.error && this.props.auth.isAuth && \r\n                    <p style={{position: 'absolute', width: '100vw', top: '190px'}} className='text-danger mt-1 col-12'>{this.props.comments.errorMessage}</p>\r\n                }    \r\n                {!this.props.auth.isAuth && \r\n                    <h2 className='text-warning'>Do you need is logged in to seeing and written comments! <Link to={'/user/login'}>Login</Link></h2>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n        \r\n}    \r\n\r\n\r\nconst mapStateToProps = state => {\r\n     return{\r\n        comments : state.comments,\r\n        auth: state.auth\r\n     }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        load : () => dispatch(ActionCreator.getCommentsRequest()),\r\n        sendComment : comment => dispatch(ActionCreator.createCommentRequest(comment)),\r\n        remove : comment => dispatch(ActionCreator.removeCommentRequest(comment)),\r\n        error : message => dispatch(ActionCreator.createCommentFailure(message))\r\n    }\r\n   \r\n}\r\n    \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreensComments)\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst BodyName = styled.div`\r\n.fa{\r\n    padding-top: 10px\r\n}\r\n`\r\n\r\nconst Name = (props) => {\r\n    return (\r\n        <BodyName>\r\n            <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text fa fa-user\" aria-hidden='true'></span>\r\n                </div>\r\n                <input autoComplete=\"on\" onChange={props.handleChange('name')} type=\"text\" placeholder='Full Name' className=\"form-control\"/>\r\n            </div>\r\n        </BodyName>\r\n    )\r\n}\r\nexport default Name","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst BodyEmail = styled.div`\r\n.fa{\r\n    padding-top: 10px\r\n}\r\n#email{\r\n    min-width: 120px    \r\n}\r\n`\r\n\r\nconst Email = (props) => {\r\n    return (\r\n        <BodyEmail>\r\n        <div className=\"input-group\">\r\n            <div className=\"input-group-prepend mx-auto\">\r\n                <span className=\"input-group-text fa fa-envelope\"></span>   \r\n            </div> \r\n            <input autoComplete=\"on\" id='email' onChange={props.handleChange('email')} value={props.state.email}  type=\"email\" placeholder='Email' className=\"form-control\"/>\r\n            {props.updateEmail && \r\n                <div className='mx-auto'>\r\n                    <button type='button' onClick={props.updateEmail} className=\"btn btn-primary ml-1\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Change your Email\">Change</button>   \r\n                </div>}\r\n        </div>\r\n        </BodyEmail>\r\n    )\r\n}\r\n\r\nexport default Email","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst BodyPassword = styled.div`\r\n.fa{\r\n    padding-top: 10px\r\n}\r\n`\r\nconst Password = (props) => { \r\n    return (\r\n        <BodyPassword>\r\n            <div className='input-group'>\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text fa fa-key\"></span>\r\n                </div>\r\n                <input type=\"password\" autoComplete=\"on\" id='password' value={props.state.password} placeholder='Password' onChange={props.handleChange('password')} className=\"form-control\"/> \r\n            </div>\r\n        </BodyPassword>\r\n    )\r\n}\r\n\r\nexport default Password","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst BodyPasswordConfirm = styled.div`\r\n.fa{\r\n    padding-top: 10px\r\n}\r\n#passwordConfirm{\r\n    min-width:120px\r\n}\r\n`\r\n\r\nconst PasswordConfirm = (props) => {\r\n    return(\r\n        <BodyPasswordConfirm>\r\n            <div className='input-group'>\r\n                <div className=\"input-group-prepend mx-auto\">\r\n                    <span className=\"input-group-text fa fa-key\"></span>\r\n                </div>\r\n                <input  type=\"password\" autoComplete=\"on\" value={props.state.passwordConfirm} id='passwordConfirm' placeholder='Confirm Password' onChange={props.handleChange('passwordConfirm')}  className=\"form-control\"/>\r\n                {props.updatePassword && \r\n                    <div className='mx-auto'>\r\n                        <button type='button' onClick={props.updatePassword} className=\"btn btn-primary ml-1\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Change your Password\">Change</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </BodyPasswordConfirm>\r\n    )\r\n}\r\n\r\nexport default PasswordConfirm","import React, {Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Button from '../../../elements/Button'\r\nimport Name from './Name'\r\nimport Email from './Email'\r\nimport Password from './Password'\r\nimport PasswordConfirm from './PasswordConfirm'\r\n\r\n\r\nconst FormAccount = (props) => { \r\n    let val = '12'\r\n    return(\r\n        <Fragment>\r\n            <div className='mx-auto' style={{width: '50%'}}> \r\n                {props.createAccount && <div className='mb-5'><Name handleChange={props.handleChange}/></div>}\r\n                <div className='mb-5'><Email state={props.state} handleChange={props.handleChange} updateEmail={props.updateEmail}/></div>\r\n                {((props.createAccount && (val = 6)) || props.login || props.removeProfile) && \r\n                    <div className='row mb-3'>\r\n                        <div className={`col-lg-${val} mb-5`}><Password state={props.state} handleChange={props.handleChange}/></div>\r\n                        {!props.login && \r\n                            <div className={`col-lg-${val}`}><PasswordConfirm state={props.state} handleChange={props.handleChange} updatePassword={props.updatePassword}/></div>\r\n                        }\r\n                    </div>\r\n                }       \r\n                <Button>\r\n                    {props.createAccount && <button className=\"button button2\" type=\"button\" onClick={props.createAccount}>Create</button>}\r\n                    {props.login && <button type=\"button\" className=\"button button2\" onClick={props.login}>Login</button>}\r\n                    {props.removeProfile && \r\n                        <section className='mt-5'>\r\n                            <button className='navbar-toggler btn button button3 bg-warning' type=\"button\" data-toggle=\"collapse\" data-target=\"#delete\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">Delete account</button>\r\n                            <div className='collapse navbar-collapse'  id=\"delete\">\r\n                            <ul className=\"navbar-nav nav-pills my-auto mx-auto\" id=\"componentsList\">\r\n                                <li className=\"nav-item\">\r\n                                    <h4 className='text-warning'>Are you sure?</h4>\r\n                                    <Link className='btn btn-danger mr-2' to='/'>No</Link>\r\n                                    <button type='button' className='btn btn-info' onClick={props.removeProfile}>Yes</button>\r\n                                </li>  \r\n                            </ul>    \r\n                            </div>\r\n                        </section>\r\n                    }\r\n                </Button><br/><br/>         \r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FormAccount","import React, {Component, Fragment} from 'react'\r\nimport  {Redirect, Link} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport ActionCreator from '../redux/actionCreators'\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport FormAccount from './elements/formAccount'\r\n\r\n\r\nconst BodyLogin = styled.div`\r\n  .fa{\r\n    padding-top: 10px\r\n  }\r\n  .positionMessage{\r\n    position: absolute \r\n    width: 100%\r\n    top: 260px\r\n  }\r\n`\r\n\r\nexport class ScreensLogin extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        sendEmail: ''   \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.reset()  \r\n    }\r\n\r\n    handleChange = field => event => {\r\n        this.setState({[field]:event.target.value})\r\n    }\r\n    \r\n    login = () => {   \r\n        if (this.state.email === ''){\r\n            this.props.error('Put your e-mail!')\r\n            return\r\n        }\r\n        if (this.state.password  === ''){\r\n            this.props.error('Write your password!')\r\n            return\r\n        }\r\n        const {email, password} = this.state\r\n        const user = {email, password}\r\n        this.props.login(user)\r\n    }\r\n\r\n    sendEmail = () => {\r\n        this.props.sendEmail(this.state.sendEmail)\r\n        this.setState({sendEmail: ''})\r\n    }\r\n                                \r\n    render(){\r\n        return (\r\n            <Fragment>  \r\n                {this.props.auth.isAuth && <Redirect to={'/'}/>} \r\n                <BodyLogin>                             \r\n                    <div>\r\n                        {this.props.auth.error &&  \r\n                            <p className='text-danger positionMessage'>{this.props.auth.errorMessage}</p>\r\n                        }\r\n                        {this.props.auth.isSigningin && \r\n                            <p className=\"text-info positionMessage\">Is signing in...</p>\r\n                        }\r\n                        {this.props.auth.isLoadding && \r\n                            <p className=\"text-info positionMessage\">Is sending email...</p>\r\n                        }\r\n                        {this.props.auth.emailSended && \r\n                            <p className=\"text-success positionMessage\">Access your email for change password!</p>\r\n                        }\r\n                        <div>\r\n                            <FormAccount handleChange={this.handleChange} state={this.state} login={this.login}/> \r\n                            <Link to='' className=\"text-warning\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                                Forgot your password?\r\n                            </Link>\r\n                            <section>\r\n                                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                    <div className=\"modal-dialog\" role=\"document\">\r\n                                        <div className=\"modal-content\">\r\n                                            <div className=\"modal-header\">\r\n                                                <h5 className=\"modal-title mx-auto font-weight-bold\" id=\"exampleModalLabel\">Receive your new password</h5>\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                    <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"modal-body\">\r\n                                                <div className=\"input-group\">\r\n                                                    <div className=\"input-group-prepend mx-auto mb-2\">\r\n                                                        <span className=\"input-group-text fa fa-envelope\"></span>   \r\n                                                    </div> \r\n                                                    <input autoComplete=\"on\" id='sendEmail' onChange={this.handleChange('sendEmail')} value={this.state.sendEmail}  type=\"email\" placeholder='Email' className=\"form-control mb-2\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"modal-footer\">\r\n                                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                                <button type=\"button\" onClick={this.sendEmail} data-dismiss=\"modal\" className=\"btn btn-primary\">Send</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <p className='text-info mt-4'>Do you haven't register? <Link to='/user/register'>Register</Link></p>     \r\n                        </div>  \r\n                    </div>  \r\n                </BodyLogin>       \r\n            </Fragment>\r\n        )\r\n    }\r\n    \r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: user => dispatch(ActionCreator.signinRequest(user)),\r\n        sendEmail: email => dispatch(ActionCreator.sendEmailRequest(email)),\r\n        error: message => dispatch(ActionCreator.signinFailure(message)),\r\n        reset: () => dispatch(ActionCreator.resetAuth())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreensLogin)","import React, {Component, Fragment} from 'react'\r\nimport  {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport ActionCreator from '../redux/actionCreators'\r\nimport styled from 'styled-components'\r\n\r\nimport FormAccount from './elements/formAccount'\r\n\r\nconst BodyRegister = styled.div`\r\n\r\n    .positionMessage{\r\n        position: absolute\r\n        top: 350px\r\n        width: 100%\r\n    }\r\n`\r\n\r\nexport class ScreensCreateAccount extends Component {    \r\n    \r\n    state={ \r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",  \r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.reset() \r\n    }\r\n\r\n    \r\n    handleChange = field => event => {\r\n        const form = {\r\n            ...this.state,\r\n            [field]: event.target.value\r\n        }\r\n        if (field === 'passwordConfirm'){\r\n            if (form.password.length < 6){\r\n                this.setState({password:'', passwordConfirm: ''})\r\n                this.props.error('The password needs has to more than 6 characters!')  \r\n                return\r\n            }  \r\n            if (form[field].length >= form.password.length && form[field] !== form.password){\r\n                this.setState({passwordConfirm: ''})\r\n                this.props.error('The password confirm is wrong')\r\n                return\r\n            }  \r\n        }\r\n        document.getElementById('password').onpaste = () => false\r\n        document.getElementById('passwordConfirm').onpaste = () => false\r\n        this.setState({...form})\r\n    }\r\n    \r\n\r\n    createAccount = () => { \r\n        if (this.state.name.length === 0){ \r\n            this.props.error('Write your name!')\r\n            return           \r\n        }else if (this.state.name.length > 0 && this.state.name.length < 3){\r\n            this.props.error('The name needs has to more than 2 characters!')\r\n            return           \r\n        }\r\n        if (this.state.passwordConfirm !== this.state.password){\r\n            this.setState({passwordConfirm: ''})\r\n            this.props.error('The password confirm  is wrong')\r\n            return\r\n        }\r\n        const user = {\r\n            name : this.state.name, \r\n            email : this.state.email, \r\n            passwd : this.state.passwordConfirm\r\n        }\r\n        this.props.createAccount(user)          \r\n    }   \r\n\r\n   \r\n    render(){\r\n        return (\r\n            <Fragment>  \r\n                {this.props.auth.isAuth && <Redirect to='/'/>} \r\n                <BodyRegister>\r\n                    {this.props.auth.isLoadding && \r\n                        <p className='text-info positionMessage'>Is registring...</p>\r\n                    }\r\n                    {this.props.auth.error && \r\n                        <p className=\"text-danger positionMessage\">{this.props.auth.errorMessage}</p>\r\n                    }\r\n                    <div>\r\n                        <FormAccount handleChange={this.handleChange} createAccount={this.createAccount} state={this.state}/>  \r\n                    </div>\r\n                </BodyRegister>\r\n            </Fragment>\r\n        )   \r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth : state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => { \r\n    return {\r\n        createAccount : user => dispatch(ActionCreator.createProfileRequest(user)),\r\n        error : message => dispatch(ActionCreator.createProfileFailure(message)),\r\n        reset : () => dispatch(ActionCreator.resetAuth())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreensCreateAccount) ","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport ActionCreator from '../redux/actionCreators' \r\n\r\nimport styled from 'styled-components'\r\n\r\nimport FormAccount from './elements/formAccount'\r\n\r\nconst BodySetting = styled.div`\r\n    .messagePosition{\r\n        position: absolute\r\n        width: 100%\r\n        top: 350px\r\n    }\r\n`\r\n\r\nclass ScreensSetting extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n        receivedEmail: false  \r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.reset() \r\n    }\r\n    componentDidUpdate(){\r\n        if (!this.state.receivedEmail && this.props.auth.user.email !== undefined){\r\n            this.setState({email: this.props.auth.user.email, receivedEmail: true})\r\n        } \r\n    }\r\n\r\n    updateEmail = () => {\r\n        const {email} = this.state\r\n        this.props.updateEmail(email)\r\n    }\r\n\r\n    updatePassword = () => {\r\n        if (this.state.password === this.state.passwordConfirm){\r\n            const {passwordConfirm} = this.state\r\n            this.props.updatePassword(passwordConfirm)\r\n            this.setState({\r\n                password: '',\r\n                passwordConfirm: ''\r\n            })\r\n        }else{\r\n            this.props.error('The password confirm  is wrong')\r\n        }\r\n        \r\n    }\r\n\r\n    removeProfile = () => {\r\n        const {user} = this.props.auth\r\n        this.props.destroyAuth()\r\n        this.props.destroyComments()\r\n        this.props.destroySeries()  \r\n        this.props.removeProfile(user)\r\n    }\r\n\r\n    handleChange = field => event => {\r\n        const form = {\r\n            ...this.state,\r\n            [field]: event.target.value\r\n        }\r\n        if (field === 'passwordConfirm'){\r\n            if (form.password.length < 6){\r\n                this.setState({password:'', passwordConfirm: ''})\r\n                this.props.error('The password needs has to more than 6 characters!')  \r\n                return\r\n            }  \r\n            if (form[field].length >= form.password.length && form[field] !== form.password){\r\n                this.setState({passwordConfirm: ''})\r\n                this.props.error('The password confirm is wrong')\r\n                return\r\n            }  \r\n        }\r\n        document.getElementById('password').onpaste = () => false\r\n        document.getElementById('passwordConfirm').onpaste = () => false\r\n        this.setState({...form})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <BodySetting>\r\n                <div>\r\n                    {!this.props.auth.isAuth && this.props.auth.isLoadding && <Redirect to='/'></Redirect>}\r\n                    {this.props.auth.isLoadding && <p className='text-info messagePosition'>Waiting...</p>}\r\n                    {this.props.auth.error && <p className='text-danger messagePosition'>{this.props.auth.errorMessage}</p>} \r\n                    \r\n                    {this.props.auth.emailChanged && <p className='text-success messagePosition'>Email changed with success!</p>}\r\n                    {this.props.auth.passwordChanged && <p className='text-success messagePosition'>Password changed with success!</p>}\r\n                    <section>\r\n                        <FormAccount state={this.state} handleChange={this.handleChange} removeProfile={this.removeProfile} updateEmail={this.updateEmail} updatePassword={this.updatePassword}/>  \r\n                    </section>\r\n                </div>\r\n            </BodySetting>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        series: state.series,\r\n        comments: state.comments\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateEmail: email => dispatch(ActionCreator.updateEmailRequest(email)),\r\n        updatePassword: password => dispatch(ActionCreator.updatePasswordRequest(password)),\r\n        removeProfile: user => dispatch(ActionCreator.removeProfileRequest(user)),\r\n        error: message => dispatch(ActionCreator.updatePasswordFailure(message)),\r\n        reset: () => dispatch(ActionCreator.resetAuth()),\r\n        destroyAuth : () => dispatch(ActionCreator.destroyAuthRequest()),\r\n        destroyComments : () => dispatch(ActionCreator.destroyComments()),\r\n        destroySeries : () => dispatch(ActionCreator.destroySeries()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ScreensSetting)\r\n\r\n","import React from 'react'\r\nimport {\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport ScreensHome from '../Home'\r\nimport ScreensAbout from '../About'\r\nimport ScreensNewSeries from '../NewSeries'\r\nimport ScreensSeries from '../Series'\r\nimport ScreensEditSeries from '../EditSeries'\r\nimport ScreensComments from '../comments'\r\nimport ScreensLogin from '../Login'\r\nimport ScreensRegister from '../CreateAccount'\r\nimport ScreensSetting from '../Setting'\r\n\r\n \r\nimport styled from 'styled-components'\r\n\r\n\r\nconst BodyMain = styled.div`\r\n    .components {\r\n        padding-top: 120px\r\n        min-height: 95vh\r\n        position: relative\r\n        overflow: auto\r\n    }\r\n`     \r\n\r\nconst ScreensElementsRoot = () => {\r\n    return (\r\n        <BodyMain>\r\n            <div className=\"text-center components\">\r\n                <Switch>\r\n                    <Route exact path='/' component={ScreensHome}/>\r\n                    <Route exact path='/series/edit/:genre/:id' component={ScreensEditSeries}/>\r\n                    <Route exact path='/series/:genre' component={ScreensSeries}/>  \r\n                    <Route exact path='/new' component={ScreensNewSeries}/>\r\n                    <Route exact path='/about' component={ScreensAbout}/>\r\n                    <Route exact path='/comments' component={ScreensComments}/>\r\n                    <Route exact path='/user/login' component={ScreensLogin}/>\r\n                    <Route exact path='/user/register' component={ScreensRegister}/> \r\n                    <Route exact path='/user/setting' component={ScreensSetting}/>                 \r\n                </Switch>\r\n            </div>\r\n        </BodyMain>\r\n    )\r\n}\r\n\r\nexport default ScreensElementsRoot","import React, {Fragment} from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nconst BodyFooter = styled.div`\r\n  \r\nfooter {\r\n    background: #991818 \r\n    box-shadow: 0px 0px 15px 10px\r\n    width: 100%\r\n    min-height: 37px\r\n    text-align: center\r\n  }\r\n \r\n`\r\n\r\nconst ScreensElementsFooter = () => {\r\n    return (\r\n        <Fragment>\r\n            <BodyFooter>\r\n                    <footer>\r\n                        <h4>Developed by<span className=\"text-danger\"> @JoséAlvesJúnior</span></h4>\r\n                    </footer>\r\n            </BodyFooter>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ScreensElementsFooter","import React, {Fragment, Component} from 'react'\r\nimport ScreensElementsNav from './elements/nav'\r\nimport ScreensElementsRoot from './elements/Root'\r\nimport ScreensElementsFooter from './elements/Footer' \r\n\r\nimport {auth} from '../firebase'\r\n\r\n\r\nclass Screens extends Component {\r\n\r\n    state = {\r\n        verify: false\r\n    }\r\n\r\n    funcVerify = new Promise(resolve => \r\n        resolve(auth.onAuthStateChanged(() => {\r\n            this.setState({verify:true})\r\n        }))\r\n    )  \r\n    render(){\r\n        return(\r\n            <Fragment>\r\n            <div>\r\n                <ScreensElementsNav/>\r\n                {this.state.verify && <ScreensElementsRoot/>}\r\n                <ScreensElementsFooter/>\r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n   \r\n    \r\n}\r\n\r\nexport default Screens","import React, {Fragment} from 'react'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './redux'\nimport Screens from './screens'\n\n\n\nconst App = () => {\n \n    return (\n      <Provider store={store}>\n        <Router>\n          <Fragment>\n            <Screens/>\n          </Fragment>\n        </Router>\n      </Provider>\n    )\n}\n\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(\n        <App />, \n        document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}