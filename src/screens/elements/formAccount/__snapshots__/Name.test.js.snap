// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should pass a selected value to the handleChange 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Name
    handleChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "name",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    value="name"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="input-group"
      >
        <div
          className="input-group-prepend"
        >
          <span
            aria-hidden="true"
            className="input-group-text fa fa-user"
          />
        </div>
        <input
          autoComplete="on"
          className="form-control"
          placeholder="Full Name"
          type="text"
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="input-group-prepend"
          >
            <span
              aria-hidden="true"
              className="input-group-text fa fa-user"
            />
          </div>,
          <input
            autoComplete="on"
            className="form-control"
            placeholder="Full Name"
            type="text"
          />,
        ],
        "className": "input-group",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden="true"
              className="input-group-text fa fa-user"
            />,
            "className": "input-group-prepend",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": "true",
              "className": "input-group-text fa fa-user",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "on",
            "className": "form-control",
            "onChange": undefined,
            "placeholder": "Full Name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              aria-hidden="true"
              className="input-group-text fa fa-user"
            />
          </div>
          <input
            autoComplete="on"
            className="form-control"
            placeholder="Full Name"
            type="text"
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-group-prepend"
            >
              <span
                aria-hidden="true"
                className="input-group-text fa fa-user"
              />
            </div>,
            <input
              autoComplete="on"
              className="form-control"
              placeholder="Full Name"
              type="text"
            />,
          ],
          "className": "input-group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                aria-hidden="true"
                className="input-group-text fa fa-user"
              />,
              "className": "input-group-prepend",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "className": "input-group-text fa fa-user",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "on",
              "className": "form-control",
              "onChange": undefined,
              "placeholder": "Full Name",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Name
    handleChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "name",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="input-group"
      >
        <div
          className="input-group-prepend"
        >
          <span
            aria-hidden="true"
            className="input-group-text fa fa-user"
          />
        </div>
        <input
          autoComplete="on"
          className="form-control"
          placeholder="Full Name"
          type="text"
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="input-group-prepend"
          >
            <span
              aria-hidden="true"
              className="input-group-text fa fa-user"
            />
          </div>,
          <input
            autoComplete="on"
            className="form-control"
            placeholder="Full Name"
            type="text"
          />,
        ],
        "className": "input-group",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              aria-hidden="true"
              className="input-group-text fa fa-user"
            />,
            "className": "input-group-prepend",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-hidden": "true",
              "className": "input-group-text fa fa-user",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "on",
            "className": "form-control",
            "onChange": undefined,
            "placeholder": "Full Name",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              aria-hidden="true"
              className="input-group-text fa fa-user"
            />
          </div>
          <input
            autoComplete="on"
            className="form-control"
            placeholder="Full Name"
            type="text"
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-group-prepend"
            >
              <span
                aria-hidden="true"
                className="input-group-text fa fa-user"
              />
            </div>,
            <input
              autoComplete="on"
              className="form-control"
              placeholder="Full Name"
              type="text"
            />,
          ],
          "className": "input-group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                aria-hidden="true"
                className="input-group-text fa fa-user"
              />,
              "className": "input-group-prepend",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "className": "input-group-text fa fa-user",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "on",
              "className": "form-control",
              "onChange": undefined,
              "placeholder": "Full Name",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
